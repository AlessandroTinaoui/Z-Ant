test
+- run test_lib 3/3 passed, 1 leaked
error: 'IR_graph.test_all_write_op.test.Test write_op on all oneOp models' leaked:      test: Test write_op on all oneOp models

     opening available_operations... done

Operation: Add
model_path : datasets/oneOpModels/Add_0.onnx

 - onnx Model: Addtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Add_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 3, 31, 19 } 
 ----------- init(Add_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1, 3, 31, 19 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 3, 31, 19 } 
 -------- outputs 
 ----------- init(Add_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 3, 31, 19 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Add has 1 nodes

   - Testing node 0: Add_node (type: Add)

Operation: AveragePool
model_path : datasets/oneOpModels/AveragePool_0.onnx

 - onnx Model: AveragePooltest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(AveragePool_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 4, 4 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 1, 4, 4 } 
 -------- outputs 
 ----------- init(AveragePool_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 1, 4, 4 } 
 -------- nodes 
 --- 0 
  Linearized Graph for AveragePool has 1 nodes

   - Testing node 0: AveragePoolnode_k[3, 3]_s[1, 1]_p[1, 1, 1, 1]_c1_apSAME_UPPER (type: AveragePool)

Operation: BatchNormalization
model_path : datasets/oneOpModels/BatchNormalization_0.onnx

 - onnx Model: BatchNormalizationtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(BatchNormalization_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 38, 28 } 
 ----------- init(BatchNormalization_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 ----------- init(BatchNormalization_param_in_2, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 ----------- init(BatchNormalization_param_in_3, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 ----------- init(BatchNormalization_param_in_4, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 4, 38, 28 } 
 -------- outputs 
 ----------- init(BatchNormalization_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 4, 38, 28 } 
 -------- nodes 
 --- 0 
  Linearized Graph for BatchNormalization has 1 nodes

   - Testing node 0: BatchNormalization_node (type: BatchNormalization)

Operation: Ceil
model_path : datasets/oneOpModels/Ceil_0.onnx

 - onnx Model: Ceiltest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Ceil_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 3, 37, 31 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 3, 37, 31 } 
 -------- outputs 
 ----------- init(Ceil_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 3, 37, 31 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Ceil has 1 nodes

   - Testing node 0: Ceil_node (type: Ceil)

Operation: Concat
model_path : datasets/oneOpModels/Concat_0.onnx

 - onnx Model: Concattest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Concat_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 43, 17 } 
 ----------- init(Concat_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 46, 17 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 4, 43, 17 } 
 -------- outputs 
 ----------- init(Concat_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 4, 89, 17 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Concat has 1 nodes

   - Testing node 0: Concatnode_axis2 (type: Concat)

Operation: Conv
model_path : datasets/oneOpModels/Conv_0.onnx

 - onnx Model: Convtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Conv_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 3, 37, 43 } 
 ----------- init(Conv_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 3, 3, 2, 10 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 3, 37, 43 } 
 -------- outputs 
 ----------- init(Conv_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 3, 14, 13 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Conv has 1 nodes

   - Testing node 0: Convnode_k[2, 10]_s[3, 3]_d[1, 1]_p[2, 2] (type: Conv)

Operation: Div
model_path : datasets/oneOpModels/Div_0.onnx

 - onnx Model: Divtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Div_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 2, 18, 21 } 
 ----------- init(Div_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1, 2, 18, 21 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 2, 18, 21 } 
 -------- outputs 
 ----------- init(Div_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 2, 18, 21 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Div has 1 nodes

   - Testing node 0: Div_node (type: Div)

Operation: Div
model_path : datasets/oneOpModels/Div_0.onnx

 - onnx Model: Divtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Div_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 2, 18, 21 } 
 ----------- init(Div_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1, 2, 18, 21 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 2, 18, 21 } 
 -------- outputs 
 ----------- init(Div_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 2, 18, 21 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Div has 1 nodes

   - Testing node 0: Div_node (type: Div)

Operation: Elu
model_path : datasets/oneOpModels/Elu_0.onnx

 - onnx Model: Elutest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Elu_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 7 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 7 } 
 -------- outputs 
 ----------- init(Elu_param_out_0, null, vi, .OUTPUT) 
                shape:{ 7 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Elu has 1 nodes

   - Testing node 0: Elunode_alpha1.807 (type: Elu)

Operation: Flatten
model_path : datasets/oneOpModels/Flatten_0.onnx

 - onnx Model: Flattentest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Flatten_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 3, 6, 7, 10 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 3, 6, 7, 10 } 
 -------- outputs 
 ----------- init(Flatten_param_out_0, null, vi, .OUTPUT) 
                shape:{ 3, 420 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Flatten has 1 nodes

   - Testing node 0: Flattennode_axis-3 (type: Flatten)

Operation: Gather
model_path : datasets/oneOpModels/Gather_0.onnx

 - onnx Model: Gathertest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Gather_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 5, 10 } 
 ----------- init(Gather_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 5, 10 } 
 -------- outputs 
 ----------- init(Gather_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 10 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Gather has 1 nodes

   - Testing node 0: Gathernode_axis0 (type: Gather)

Operation: Gemm
model_path : datasets/oneOpModels/Gemm_0.onnx

 - onnx Model: Gemmtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Gemm_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 4, 3 } 
 ----------- init(Gemm_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 3, 10 } 
 ----------- init(Gemm_param_in_2, tp, null, .INITIALIZER) 
                shape:{ 4, 10 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 4, 3 } 
 -------- outputs 
 ----------- init(Gemm_param_out_0, null, vi, .OUTPUT) 
                shape:{ 4, 10 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Gemm has 1 nodes

   - Testing node 0: Gemmnode_alpha1.15beta1.6 (type: Gemm)

Operation: Identity
model_path : datasets/oneOpModels/Identity_0.onnx

 - onnx Model: Identitytest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Identity_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 46, 11 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 1, 46, 11 } 
 -------- outputs 
 ----------- init(Identity_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 1, 46, 11 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Identity has 1 nodes

   - Testing node 0: Identity_node (type: Identity)

Operation: LeakyRelu
model_path : datasets/oneOpModels/LeakyRelu_0.onnx

 - onnx Model: LeakyRelutest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(LeakyRelu_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 30, 38 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 4, 30, 38 } 
 -------- outputs 
 ----------- init(LeakyRelu_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 4, 30, 38 } 
 -------- nodes 
 --- 0 
  Linearized Graph for LeakyRelu has 1 nodes

   - Testing node 0: LeakyRelunode_alpha0.191 (type: LeakyRelu)

Operation: MatMul
model_path : datasets/oneOpModels/MatMul_0.onnx

 - onnx Model: MatMultest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(MatMul_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 9, 8 } 
 ----------- init(MatMul_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 8, 9 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 9, 8 } 
 -------- outputs 
 ----------- init(MatMul_param_out_0, null, vi, .OUTPUT) 
                shape:{ 9, 9 } 
 -------- nodes 
 --- 0 
  Linearized Graph for MatMul has 1 nodes

   - Testing node 0: MatMul_node (type: MatMul)[mathHandler] (warn): Error: Tensor 'MatMul_param_in_1' not found in globals.tensorHashMap for MatMul.


     ERROR: Failed to write_op for node MatMul_node in model MatMul: error.TensorNotFound


Operation: MaxPool
model_path : datasets/oneOpModels/MaxPool_0.onnx

 - onnx Model: MaxPooltest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(MaxPool_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 4, 4 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 1, 4, 4 } 
 -------- outputs 
 ----------- init(MaxPool_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 1, 3, 3 } 
 -------- nodes 
 --- 0 
  Linearized Graph for MaxPool has 1 nodes

   - Testing node 0: MaxPoolnode_k[2, 2]_s[1, 1]_p[0, 0, 0, 0] (type: MaxPool)

Operation: Mean
model_path : datasets/oneOpModels/Mean_0.onnx

 - onnx Model: Meantest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Mean_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 1 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 1, 1 } 
 -------- outputs 
 ----------- init(Mean_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 3, 2 } 
 -------- nodes 
 --- 0 

ERROR: init() is not available for Mean operator!! 


  Linearized Graph for Mean has 1 nodes

   - Testing node 0: Mean_node_1_inputs (type: Mean)

ERROR: write_op() is not available!! 


     ERROR: Failed to write_op for node Mean_node_1_inputs in model Mean: error.write_op_notAvailable


Operation: Mul
model_path : datasets/oneOpModels/Mul_0.onnx

 - onnx Model: Multest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Mul_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 37, 35 } 
 ----------- init(Mul_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 37, 35 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 4, 37, 35 } 
 -------- outputs 
 ----------- init(Mul_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 4, 37, 35 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Mul has 1 nodes

   - Testing node 0: Mul_node (type: Mul)

Operation: Relu
model_path : datasets/oneOpModels/Relu_0.onnx

 - onnx Model: Relutest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Relu_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 3, 45, 32 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 3, 45, 32 } 
 -------- outputs 
 ----------- init(Relu_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 3, 45, 32 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Relu has 1 nodes

   - Testing node 0: Relu_node (type: Relu)

Operation: Reshape
model_path : datasets/oneOpModels/Reshape_0.onnx

 - onnx Model: Reshapetest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Reshape_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 3, 2, 3, 4 } 
 ----------- init(Reshape_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 3, 2, 3, 4 } 
 -------- outputs 
 ----------- init(Reshape_param_out_0, null, vi, .OUTPUT) 
                shape:{ 3, 4, 3, 2 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Reshape has 1 nodes

   - Testing node 0: Reshape_node (type: Reshape)

Operation: Sigmoid
model_path : datasets/oneOpModels/Sigmoid_0.onnx

 - onnx Model: Sigmoidtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Sigmoid_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 38, 10 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 4, 38, 10 } 
 -------- outputs 
 ----------- init(Sigmoid_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 4, 38, 10 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Sigmoid has 1 nodes

   - Testing node 0: Sigmoid_node (type: Sigmoid)

Operation: Slice
model_path : datasets/oneOpModels/Slice_0.onnx

 - onnx Model: Slicetest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Slice_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 8, 8, 9, 8 } 
 ----------- init(Slice_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 ----------- init(Slice_param_in_2, tp, null, .INITIALIZER) 
                shape:{ 4 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 8, 8, 9, 8 } 
 -------- outputs 
 ----------- init(Slice_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 2, 2, 2 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Slice has 1 nodes

   - Testing node 0: Slice_node (type: Slice)

ERROR: write_op() is not available!! 


     ERROR: Failed to write_op for node Slice_node in model Slice: error.write_op_notAvailable


Operation: Split
model_path : datasets/oneOpModels/Split_0.onnx

 - onnx Model: Splittest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Split_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 2, 7, 28, 26 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 2, 7, 28, 26 } 
 -------- outputs 
 ----------- init(Split_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 7, 28, 26 } 
 -------- nodes 
 --- 0 
 ----------- init(split_output1, null, vi, .LINK) 
                shape:{ 1, 7, 28, 26 } 
 ----------- init(split_output2, null, vi, .LINK) 
                shape:{ 1, 7, 28, 26 } 
 --- 1 
 ----------- init(processed_output1, null, vi, .LINK) 
                shape:{ 1, 7, 28, 26 } 
 --- 2 
 ----------- init(processed_output2, null, vi, .LINK) 
                shape:{ 1, 7, 28, 26 } 
 --- 3 
  Linearized Graph for Split has 4 nodes

   - Testing node 0: Split_split_node (type: Split)

ERROR: write_op() is not available!! 


     ERROR: Failed to write_op for node Split_split_node in model Split: error.write_op_notAvailable

   - Testing node 1: Sigmoid_after_split (type: Sigmoid)
   - Testing node 2: Relu_after_split (type: Relu)
   - Testing node 3: Add_after_processing (type: Add)

Operation: Sub
model_path : datasets/oneOpModels/Sub_0.onnx

 - onnx Model: Subtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Sub_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 48, 24 } 
 ----------- init(Sub_param_in_1, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 48, 24 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 1, 48, 24 } 
 -------- outputs 
 ----------- init(Sub_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 1, 48, 24 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Sub has 1 nodes

   - Testing node 0: Sub_node (type: Sub)

Operation: Tanh
model_path : datasets/oneOpModels/Tanh_0.onnx

 - onnx Model: Tanhtest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Tanh_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 1, 48, 47 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 1, 48, 47 } 
 -------- outputs 
 ----------- init(Tanh_param_out_0, null, vi, .OUTPUT) 
                shape:{ 1, 1, 48, 47 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Tanh has 1 nodes

   - Testing node 0: Tanh_node (type: Tanh)

Operation: Transpose
model_path : datasets/oneOpModels/Transpose_0.onnx

 - onnx Model: Transposetest_graph0 --------------------------------n
 ---- initialize_tensorZantMap ---- 
 -------- initializers 
 ----------- init(Transpose_param_in_0, tp, null, .INITIALIZER) 
                shape:{ 1, 4, 1, 2 } 
 -------- inputs 
 ----------- init(useless_input, null, vi, .INPUT) 
                shape:{ 1, 4, 1, 2 } 
 -------- outputs 
 ----------- init(Transpose_param_out_0, null, vi, .OUTPUT) 
                shape:{ 4, 2, 1, 1 } 
 -------- nodes 
 --- 0 
  Linearized Graph for Transpose has 1 nodes

   - Testing node 0: Transposenode_perm[1, 3, 2, 0] (type: Transpose) 

 no more models -----> break


 FAILED WRITE_OP OPERATIONS: 
 model/node:MatMul::MatMul_node error:error.TensorNotFound
 model/node:Mean::Mean_node_1_inputs error:error.write_op_notAvailable
 model/node:Slice::Slice_node error:error.write_op_notAvailable
 model/node:Split::Split_split_node error:error.write_op_notAvailable[gpa] (err): memory address 0x73edb1740014 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/mem.zig:3318:36: 0x11c94fb in concatMaybeSentinel__anon_39230 (test_lib)
    const buf = try allocator.alloc(T, total_len);
                                   ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/mem.zig:3292:31: 0x1185ae5 in concat__anon_37092 (test_lib)
    return concatMaybeSentinel(allocator, T, slices, null);
                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_conv.zig:135:45: 0x119086a in write_op (test_lib)
            bias_string = try std.mem.concat(allocator, u8, &[_][]const u8{"null"});
                                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c00d0 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_averagePool.zig:120:71: 0x11870cf in write_op (test_lib)
            kernel_shape_string = try utils.i64SliceToUsizeArrayString(self.kernel_shape.?);
                                                                      ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:192:51: 0x11aec44 in write_op (test_lib)
            .averagePool => |ptr| try ptr.write_op(writer),
                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c00e0 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_averagePool.zig:129:66: 0x11872c7 in write_op (test_lib)
            strides_string = try utils.i64SliceToUsizeArrayString(self.strides.?);
                                                                 ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:192:51: 0x11aec44 in write_op (test_lib)
            .averagePool => |ptr| try ptr.write_op(writer),
                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0270 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118b91f in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:194:44: 0x11aed0c in write_op (test_lib)
            .ceil => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0280 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118b8c5 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:194:44: 0x11aed0c in write_op (test_lib)
            .ceil => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0440 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118f765 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0450 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118ffb6 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0460 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_conv.zig:141:79: 0x1190e04 in write_op (test_lib)
        const stride_string: []const u8 = try utils.i64SliceToUsizeArrayString(self.strides.?);
                                                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0470 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_conv.zig:158:68: 0x1191231 in write_op (test_lib)
                dilat_string = try utils.i64SliceToUsizeArrayString(self.dilations.?);
                                                                   ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0480 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119115c in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0570 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1191a5c in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:197:43: 0x11aee4d in write_op (test_lib)
            .div => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0580 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119228e in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:197:43: 0x11aee4d in write_op (test_lib)
            .div => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0590 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1192233 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:197:43: 0x11aee4d in write_op (test_lib)
            .div => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0680 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1191a5c in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:197:43: 0x11aee4d in write_op (test_lib)
            .div => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0690 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119228e in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:197:43: 0x11aee4d in write_op (test_lib)
            .div => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c06a0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1192233 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:197:43: 0x11aee4d in write_op (test_lib)
            .div => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0770 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119314e in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:198:43: 0x11aeece in write_op (test_lib)
            .elu => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0780 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11930f4 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:198:43: 0x11aeece in write_op (test_lib)
            .elu => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0a60 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1196221 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:201:44: 0x11af049 in write_op (test_lib)
            .gemm => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0a70 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1196a39 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:201:44: 0x11af049 in write_op (test_lib)
            .gemm => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0a80 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11972f3 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:201:44: 0x11af049 in write_op (test_lib)
            .gemm => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0a90 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1197949 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:201:44: 0x11af049 in write_op (test_lib)
            .gemm => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0d30 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_maxPool.zig:121:71: 0x119c49f in write_op (test_lib)
            kernel_shape_string = try utils.i64SliceToUsizeArrayString(self.kernel_shape.?);
                                                                      ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:205:47: 0x11af22c in write_op (test_lib)
            .maxPool => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0d40 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_maxPool.zig:129:66: 0x119c697 in write_op (test_lib)
            strides_string = try utils.i64SliceToUsizeArrayString(self.strides.?);
                                                                 ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:205:47: 0x11af22c in write_op (test_lib)
            .maxPool => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0ef0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119d22c in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:206:43: 0x11af2ad in write_op (test_lib)
            .mul => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0f00 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119da35 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:206:43: 0x11af2ad in write_op (test_lib)
            .mul => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0f10 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119d9da in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:206:43: 0x11af2ad in write_op (test_lib)
            .mul => |ptr| try ptr.write_op(writer),
                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c0ff0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a0f0f in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:209:44: 0x11af417 in write_op (test_lib)
            .relu => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c1000 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a0eb5 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:209:44: 0x11af417 in write_op (test_lib)
            .relu => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c1390 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a8a35 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:213:47: 0x11af59f in write_op (test_lib)
            .sigmoid => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c13a0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a0f65 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:209:44: 0x11af417 in write_op (test_lib)
            .relu => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c1560 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11aba6f in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:218:44: 0x11af6ed in write_op (test_lib)
            .tanh => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb17c1570 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11aba15 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:218:44: 0x11af6ed in write_op (test_lib)
            .tanh => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a602c0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1186836 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:192:51: 0x11aec44 in write_op (test_lib)
            .averagePool => |ptr| try ptr.write_op(writer),
                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a602e0 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_averagePool.zig:141:68: 0x1187441 in write_op (test_lib)
            dilations_string = try utils.i64SliceToUsizeArrayString(&[_]i64{ 1, 1, 1, 1 }); // TODO: Hardcoded in 4D, not the most elegant solution
                                                                   ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:192:51: 0x11aec44 in write_op (test_lib)
            .averagePool => |ptr| try ptr.write_op(writer),
                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60300 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_averagePool.zig:147:63: 0x1187706 in write_op (test_lib)
            pads_string = try utils.i64SliceToUsizeArrayString(self.pads.?);
                                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:192:51: 0x11aec44 in write_op (test_lib)
            .averagePool => |ptr| try ptr.write_op(writer),
                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60320 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1187631 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:192:51: 0x11aec44 in write_op (test_lib)
            .averagePool => |ptr| try ptr.write_op(writer),
                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60720 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1187fa7 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:193:58: 0x11aeca4 in write_op (test_lib)
            .batchNormalization => |ptr| try ptr.write_op(writer),
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60740 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11887f5 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:193:58: 0x11aeca4 in write_op (test_lib)
            .batchNormalization => |ptr| try ptr.write_op(writer),
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60760 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11890e5 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:193:58: 0x11aeca4 in write_op (test_lib)
            .batchNormalization => |ptr| try ptr.write_op(writer),
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60780 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1189a59 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:193:58: 0x11aeca4 in write_op (test_lib)
            .batchNormalization => |ptr| try ptr.write_op(writer),
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a607a0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118a540 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:193:58: 0x11aeca4 in write_op (test_lib)
            .batchNormalization => |ptr| try ptr.write_op(writer),
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a607c0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118a4e5 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:193:58: 0x11aeca4 in write_op (test_lib)
            .batchNormalization => |ptr| try ptr.write_op(writer),
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60ce0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118c563 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:195:46: 0x11aed6c in write_op (test_lib)
            .concat => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60d00 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118e538 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:195:46: 0x11aed6c in write_op (test_lib)
            .concat => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60d20 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118e538 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:195:46: 0x11aed6c in write_op (test_lib)
            .concat => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60d40 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118e2c1 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:195:46: 0x11aed6c in write_op (test_lib)
            .concat => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a60d60 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x118efe3 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:195:46: 0x11aed6c in write_op (test_lib)
            .concat => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a61000 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_conv.zig:147:67: 0x1191000 in write_op (test_lib)
                pads_string = try utils.i64SliceToUsizeArrayString(self.pads.?);
                                                                  ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:196:44: 0x11aedcc in write_op (test_lib)
            .conv => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a618a0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1193e93 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:199:47: 0x11aef4f in write_op (test_lib)
            .flatten => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a618c0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1193e39 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:199:47: 0x11aef4f in write_op (test_lib)
            .flatten => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a61b20 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1194bcc in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:200:46: 0x11aefe9 in write_op (test_lib)
            .gather => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a61b40 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1195391 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:200:46: 0x11aefe9 in write_op (test_lib)
            .gather => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a61b60 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1195336 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:200:46: 0x11aefe9 in write_op (test_lib)
            .gather => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a61fa0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11980af in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:202:48: 0x11af0b1 in write_op (test_lib)
            .identity => |ptr| try ptr.write_op(writer),
                                               ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a61fc0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1198055 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:202:48: 0x11af0b1 in write_op (test_lib)
            .identity => |ptr| try ptr.write_op(writer),
                                               ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62280 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1198dcc in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:203:49: 0x11af132 in write_op (test_lib)
            .leakyRelu => |ptr| try ptr.write_op(writer),
                                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a622a0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1198d72 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:203:49: 0x11af132 in write_op (test_lib)
            .leakyRelu => |ptr| try ptr.write_op(writer),
                                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62500 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x1199b0b in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:204:46: 0x11af1cc in write_op (test_lib)
            .matMul => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62520 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119a2d3 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:204:46: 0x11af1cc in write_op (test_lib)
            .matMul => |ptr| try ptr.write_op(writer),
                                             ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62820 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119bc06 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:205:47: 0x11af22c in write_op (test_lib)
            .maxPool => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62840 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_maxPool.zig:139:68: 0x119c811 in write_op (test_lib)
            dilations_string = try utils.i64SliceToUsizeArrayString(&[_]i64{ 1, 1, 1, 1 }); // TODO: Hardcoded in 4D, not the most elegant solution
                                                                   ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:205:47: 0x11af22c in write_op (test_lib)
            .maxPool => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62860 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_maxPool.zig:145:63: 0x119cad6 in write_op (test_lib)
            pads_string = try utils.i64SliceToUsizeArrayString(self.pads.?);
                                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:205:47: 0x11af22c in write_op (test_lib)
            .maxPool => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a62880 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x119ca01 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:205:47: 0x11af22c in write_op (test_lib)
            .maxPool => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63220 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a1b2d in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:210:47: 0x11af477 in write_op (test_lib)
            .reshape => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63240 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a1f87 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:210:47: 0x11af477 in write_op (test_lib)
            .reshape => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63260 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a2425 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:210:47: 0x11af477 in write_op (test_lib)
            .reshape => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63500 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a89df in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:213:47: 0x11af59f in write_op (test_lib)
            .sigmoid => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63520 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a8985 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:213:47: 0x11af59f in write_op (test_lib)
            .sigmoid => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63d20 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a8985 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:213:47: 0x11af59f in write_op (test_lib)
            .sigmoid => |ptr| try ptr.write_op(writer),
                                              ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a63d40 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11a0eb5 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:209:44: 0x11af417 in write_op (test_lib)
            .relu => |ptr| try ptr.write_op(writer),
                                           ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a64480 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11ac7c0 in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:219:49: 0x11af760 in write_op (test_lib)
            .transpose => |ptr| try ptr.write_op(writer),
                                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a644a0 leaked: 
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/array_list.zig:119:58: 0x118645d in toOwnedSlice (test_lib)
            const new_memory = try allocator.alignedAlloc(T, alignment, self.items.len);
                                                         ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:501:33: 0x1186078 in i64SliceToUsizeArrayString (test_lib)
    return try list.toOwnedSlice(); // Caller must free this!
                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/operators/op_transpose.zig:95:59: 0x11ac766 in write_op (test_lib)
        perm_string = try utils.i64SliceToUsizeArrayString(self.perm);
                                                          ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:219:49: 0x11af760 in write_op (test_lib)
            .transpose => |ptr| try ptr.write_op(writer),
                                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^

[gpa] (err): memory address 0x73edb1a644c0 leaked: 
/home/mirko/Documents/zig/Tiny/Z-Ant/src/CodeGen/utils.zig:99:40: 0x11acfeb in write_op (test_lib)
    var sanitized = try allocator.alloc(u8, name.len);
                                       ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/op_union/op_union.zig:219:49: 0x11af760 in write_op (test_lib)
            .transpose => |ptr| try ptr.write_op(writer),
                                                ^
/home/mirko/Documents/zig/Tiny/Z-Ant/src/IR_graph/nodeZant.zig:47:29: 0x11b005d in write_op (test_lib)
        try self.op.write_op(writer);
                            ^
/home/mirko/Documents/zig/Tiny/Z-Ant/tests/IR_graph/test_all_write_op.zig:121:26: 0x11b22c5 in test.Test write_op on all oneOp models (test_lib)
            node.write_op(writer) catch |err| {
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:126:29: 0x11160aa in mainServer (test_lib)
                test_fn.func() catch |err| switch (err) {
                            ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/compiler/test_runner.zig:60:26: 0x11110a1 in main (test_lib)
        return mainServer() catch @panic("internal test runner failure");
                         ^
/home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib/std/start.zig:647:22: 0x1110902 in main (test_lib)
            root.main();
                     ^
error: while executing test 'IR_graph.test_all_write_op.test.Test write_op on all oneOp models', the following test command failed:
/home/mirko/Documents/zig/Tiny/Z-Ant/.zig-cache/o/d3eba4b97ab568337b532394bc0d3a08/test_lib --seed=0xcf83b26c --cache-dir=/home/mirko/Documents/zig/Tiny/Z-Ant/.zig-cache --listen=- 
Build Summary: 3/5 steps succeeded; 1 failed; 3/3 tests passed; 1 leaked
test transitive failure
+- run test_lib 3/3 passed, 1 leaked
   +- zig test test_lib Debug native success 5s MaxRSS:339M
      +- options cached
      +- options cached
error: the following build command failed with exit code 1:
/home/mirko/Documents/zig/Tiny/Z-Ant/.zig-cache/o/2cde76e361f613a46df174c2e293dcca/build /home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/zig /home/mirko/Documents/zig/zig-linux-x86_64-0.14.0/lib /home/mirko/Documents/zig/Tiny/Z-Ant /home/mirko/Documents/zig/Tiny/Z-Ant/.zig-cache /home/mirko/.cache/zig --seed 0xcf83b26c -Ze9496c821ce488fd test --summary all
